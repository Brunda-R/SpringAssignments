{
  "stats": {
    "suites": 8,
    "tests": 19,
    "passes": 17,
    "pending": 2,
    "failures": 0,
    "start": "2020-10-05T11:11:45.876Z",
    "end": "2020-10-05T11:11:46.027Z",
    "duration": 151,
    "testsRegistered": 19,
    "passPercent": 100,
    "pendingPercent": 10.526315789473683,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4b29910c-b279-401d-adb6-b788826c7105",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7a58884f-1020-47e3-a9f6-cef525d64414",
          "title": "Phase 1 testing",
          "fullFile": "C:\\Users\\Brunda\\Documents\\Web_Exercises\\ReactAllExamplesApp\\test\\test-app.js",
          "file": "\\test\\test-app.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Phase 1 testing\"",
              "fullTitle": "Phase 1 testing \"before all\" hook in \"Phase 1 testing\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Before is called\");",
              "err": {},
              "uuid": "bf2d9e5a-9969-455f-8764-2dea3c312acd",
              "parentUUID": "7a58884f-1020-47e3-a9f6-cef525d64414",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Phase 1 testing\"",
              "fullTitle": "Phase 1 testing \"before each\" hook in \"Phase 1 testing\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"beforeEach for executed case is called\");",
              "err": {},
              "uuid": "59cb4e9f-df6b-49c5-9abe-5f8ed630de76",
              "parentUUID": "7a58884f-1020-47e3-a9f6-cef525d64414",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Phase 1 testing\"",
              "fullTitle": "Phase 1 testing \"after all\" hook in \"Phase 1 testing\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"after is called\")",
              "err": {},
              "uuid": "100d7961-4c88-4a90-be46-29e09579867e",
              "parentUUID": "7a58884f-1020-47e3-a9f6-cef525d64414",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Phase 1 testing\"",
              "fullTitle": "Phase 1 testing \"after each\" hook in \"Phase 1 testing\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"after each is called for executed case\")",
              "err": {},
              "uuid": "6c87a058-0339-4504-8725-a2d6a46225e4",
              "parentUUID": "7a58884f-1020-47e3-a9f6-cef525d64414",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return -1 when the value is not present",
              "fullTitle": "Phase 1 testing should return -1 when the value is not present",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(-1, [1, 2, 3].indexOf(5));",
              "err": {},
              "uuid": "99d02426-beb8-4d43-8c80-14b66bf620d4",
              "parentUUID": "7a58884f-1020-47e3-a9f6-cef525d64414",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "another case",
              "fullTitle": "Phase 1 testing another case",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(-1, [1, 2, 3].indexOf(5));",
              "err": {},
              "uuid": "92eec086-149a-431c-b9db-a5ed9e3bdf7a",
              "parentUUID": "7a58884f-1020-47e3-a9f6-cef525d64414",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "this case will be skipped for testing",
              "fullTitle": "Phase 1 testing this case will be skipped for testing",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "b2932b55-78a6-47bb-8300-3da7179df790",
              "parentUUID": "7a58884f-1020-47e3-a9f6-cef525d64414",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "pending...",
              "fullTitle": "Phase 1 testing pending...",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "266aa012-eb6a-40d7-83cc-c26c24f21b61",
              "parentUUID": "7a58884f-1020-47e3-a9f6-cef525d64414",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "99d02426-beb8-4d43-8c80-14b66bf620d4",
            "92eec086-149a-431c-b9db-a5ed9e3bdf7a"
          ],
          "failures": [],
          "pending": [
            "b2932b55-78a6-47bb-8300-3da7179df790",
            "266aa012-eb6a-40d7-83cc-c26c24f21b61"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f9981d49-9404-4b1e-a5ea-1f13ed4a9401",
          "title": "Cash Register",
          "fullFile": "C:\\Users\\Brunda\\Documents\\Web_Exercises\\ReactAllExamplesApp\\test\\test-c.js",
          "file": "\\test\\test-c.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e2bef975-26ea-43f5-8cee-2fbc158a0245",
              "title": "Module C",
              "fullFile": "C:\\Users\\Brunda\\Documents\\Web_Exercises\\ReactAllExamplesApp\\test\\test-c.js",
              "file": "\\test\\test-c.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have a getChange Method",
                  "fullTitle": "Cash Register Module C should have a getChange Method",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.equal(typeof C, 'object');\nassert.equal(typeof C.getChange, 'function');",
                  "err": {},
                  "uuid": "8f25a35d-bff3-4138-8df4-2d684f927fc7",
                  "parentUUID": "e2bef975-26ea-43f5-8cee-2fbc158a0245",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8f25a35d-bff3-4138-8df4-2d684f927fc7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3b94c46c-8e9c-4ed0-bb3b-8096fc10508d",
          "title": "Sum of Numbers tests",
          "fullFile": "C:\\Users\\Brunda\\Documents\\Web_Exercises\\ReactAllExamplesApp\\test\\test-function.js",
          "file": "\\test\\test-function.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9ee16ee9-8c7c-48ba-adc1-a2d26801d566",
              "title": "General tests",
              "fullFile": "C:\\Users\\Brunda\\Documents\\Web_Exercises\\ReactAllExamplesApp\\test\\test-function.js",
              "file": "\\test\\test-function.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be a function",
                  "fullTitle": "Sum of Numbers tests General tests should be a function",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(typeof sum).to.equal('function');",
                  "err": {},
                  "uuid": "bd82b7f6-22b8-40cb-af27-d83acfafa2c8",
                  "parentUUID": "9ee16ee9-8c7c-48ba-adc1-a2d26801d566",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd82b7f6-22b8-40cb-af27-d83acfafa2c8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fc2cd030-d441-4db0-aa8f-54b5b6773d62",
              "title": "Function tests",
              "fullFile": "C:\\Users\\Brunda\\Documents\\Web_Exercises\\ReactAllExamplesApp\\test\\test-function.js",
              "file": "\\test\\test-function.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return zero for a zero length input array",
                  "fullTitle": "Sum of Numbers tests Function tests should return zero for a zero length input array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum([])).to.equal(0);",
                  "err": {},
                  "uuid": "2b36874f-5860-496e-adfe-b21a671a8dbf",
                  "parentUUID": "fc2cd030-d441-4db0-aa8f-54b5b6773d62",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the member value for a one member array",
                  "fullTitle": "Sum of Numbers tests Function tests should return the member value for a one member array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum([1])).to.equal(1);",
                  "err": {},
                  "uuid": "432b3bdc-1721-4dc8-bd14-a6904ea2aa98",
                  "parentUUID": "fc2cd030-d441-4db0-aa8f-54b5b6773d62",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the member value for a one member array when given as string",
                  "fullTitle": "Sum of Numbers tests Function tests should return the member value for a one member array when given as string",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum(['1'])).to.equal(1);",
                  "err": {},
                  "uuid": "159063f3-25dd-4776-bcae-5db98c3fc2cc",
                  "parentUUID": "fc2cd030-d441-4db0-aa8f-54b5b6773d62",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add whole number arrays",
                  "fullTitle": "Sum of Numbers tests Function tests should add whole number arrays",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum([1,2,3])).to.equal(6);",
                  "err": {},
                  "uuid": "8f7162aa-1a04-4d6f-bda8-bc8a72dd6795",
                  "parentUUID": "fc2cd030-d441-4db0-aa8f-54b5b6773d62",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add whole number arrays including negative numbers",
                  "fullTitle": "Sum of Numbers tests Function tests should add whole number arrays including negative numbers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum([-1,2,3])).to.equal(4);",
                  "err": {},
                  "uuid": "5a5d619f-3805-4f33-95eb-add72c9b83bf",
                  "parentUUID": "fc2cd030-d441-4db0-aa8f-54b5b6773d62",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add whole number arrays including strings",
                  "fullTitle": "Sum of Numbers tests Function tests should add whole number arrays including strings",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum([-1,'2',3])).to.equal(4);",
                  "err": {},
                  "uuid": "88ced9f7-b2ff-4ba6-83c2-defbea51dfeb",
                  "parentUUID": "fc2cd030-d441-4db0-aa8f-54b5b6773d62",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add fractions",
                  "fullTitle": "Sum of Numbers tests Function tests should add fractions",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum([1.1,2.2,3])).to.be.closeTo(6.3,0.0001);",
                  "err": {},
                  "uuid": "00850bbd-a678-4ad9-b9a5-3a099a48b02d",
                  "parentUUID": "fc2cd030-d441-4db0-aa8f-54b5b6773d62",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not add arrays of invalid data",
                  "fullTitle": "Sum of Numbers tests Function tests should not add arrays of invalid data",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum(['pesho','gosho'])).to.be.NaN;",
                  "err": {},
                  "uuid": "daaef7e0-a66e-4b6a-b415-f1db3fb2cfd1",
                  "parentUUID": "fc2cd030-d441-4db0-aa8f-54b5b6773d62",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b36874f-5860-496e-adfe-b21a671a8dbf",
                "432b3bdc-1721-4dc8-bd14-a6904ea2aa98",
                "159063f3-25dd-4776-bcae-5db98c3fc2cc",
                "8f7162aa-1a04-4d6f-bda8-bc8a72dd6795",
                "5a5d619f-3805-4f33-95eb-add72c9b83bf",
                "88ced9f7-b2ff-4ba6-83c2-defbea51dfeb",
                "00850bbd-a678-4ad9-b9a5-3a099a48b02d",
                "daaef7e0-a66e-4b6a-b415-f1db3fb2cfd1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "96800d3f-c866-4c4e-bad2-bfed23a2ce5b",
          "title": "add()",
          "fullFile": "C:\\Users\\Brunda\\Documents\\Web_Exercises\\ReactAllExamplesApp\\test\\test-function1.js",
          "file": "\\test\\test-function1.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "correctly adds 2 args",
              "fullTitle": "add() correctly adds 2 args",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var res = add.apply(null, test.args);\nassert.equal(res, test.expected);",
              "err": {},
              "uuid": "0b1c1a60-0555-411e-ad6f-e60bdd24acd8",
              "parentUUID": "96800d3f-c866-4c4e-bad2-bfed23a2ce5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "correctly adds 3 args",
              "fullTitle": "add() correctly adds 3 args",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var res = add.apply(null, test.args);\nassert.equal(res, test.expected);",
              "err": {},
              "uuid": "9da36ada-5840-48b4-8885-0691e486ce07",
              "parentUUID": "96800d3f-c866-4c4e-bad2-bfed23a2ce5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "correctly adds 4 args",
              "fullTitle": "add() correctly adds 4 args",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var res = add.apply(null, test.args);\nassert.equal(res, test.expected);",
              "err": {},
              "uuid": "f747c4d8-3e36-4918-9f1b-99464afe5a94",
              "parentUUID": "96800d3f-c866-4c4e-bad2-bfed23a2ce5b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b1c1a60-0555-411e-ad6f-e60bdd24acd8",
            "9da36ada-5840-48b4-8885-0691e486ce07",
            "f747c4d8-3e36-4918-9f1b-99464afe5a94"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c5423f59-1781-488d-ac86-8ab5771b705c",
          "title": "Equality check",
          "fullFile": "C:\\Users\\Brunda\\Documents\\Web_Exercises\\ReactAllExamplesApp\\test\\test-should.js",
          "file": "\\test\\test-should.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Equals to ",
              "fullTitle": "Equality check Equals to ",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "foo.should.be.a('string')",
              "err": {},
              "uuid": "e294283c-2409-49ea-802a-f3ac64d17b42",
              "parentUUID": "c5423f59-1781-488d-ac86-8ab5771b705c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Beverages property ",
              "fullTitle": "Equality check Beverages property ",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "beverages.should.have.property('tea').with.length(3);",
              "err": {},
              "uuid": "d6d87f8a-7d10-4a2b-abbf-6c880b3264c5",
              "parentUUID": "c5423f59-1781-488d-ac86-8ab5771b705c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e294283c-2409-49ea-802a-f3ac64d17b42",
            "d6d87f8a-7d10-4a2b-abbf-6c880b3264c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}